name: Sync Fork with Upstream nomBranch Branch

on:
  workflow_dispatch: # Lancement manuel uniquement

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      # 1Ô∏è‚É£ R√©cup√©rer le code du repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      # 2Ô∏è‚É£ Ajouter le repository principal en tant que "upstream"
      - name: Add Upstream Repository
        run: |
          git remote add upstream https://github.com/CapgePau-Uppa/2025_Ease.git
          git fetch upstream nomBranch  # R√©cup√®re sp√©cifiquement la branche nomBranch

      # 3Ô∏è‚É£ Sauvegarder environment.ts AVANT la sync
      - name: Preserve environment.ts file (protection)
        run: |
          mkdir -p /tmp/env_backup  # Cr√©e un dossier temporaire pour stocker le fichier
          if [ -f frontend/src/environments/environment.ts ]; then
            cp -r frontend/src/environments/environment.ts /tmp/env_backup/
            echo "environment.ts sauvegard√©."
          else
            echo "environment.ts n'existe pas, rien √† sauvegarder."
          fi

      # 4Ô∏è‚É£ Sauvegarder le dossier .github pour pr√©server les workflows
      - name: Preserve .github directory
        run: |
          mkdir -p /tmp/github_backup
          cp -r .github /tmp/github_backup/ || echo "Pas de .github √† sauvegarder"

      # 5Ô∏è‚É£ Synchronisation forc√©e avec la branche nomBranch du repository principal
      - name: Force Sync with Upstream nomBranch
        run: |
          git checkout main  # Se positionner sur la branche principale
          git reset --hard upstream/nomBranch  # R√©initialiser avec le contenu de nomBranch

      # 6Ô∏è‚É£ Restaurer le dossier .github pour conserver les workflows
      - name: Restore .github directory
        run: |
          if [ -d /tmp/github_backup/.github ]; then
            cp -r /tmp/github_backup/.github .
            echo ".github restaur√© avec succ√®s !"
          else
            echo "Aucune restauration n√©cessaire pour .github"
          fi

      # 7Ô∏è‚É£ Restaurer environment.ts APR√àS la synchronisation
      - name: Restore environment.ts file
        run: |
          if [ -f /tmp/env_backup/environment.ts ]; then
            cp -r /tmp/env_backup/environment.ts frontend/src/environments/
            echo "environment.ts restaur√© avec succ√®s !"
          else
            echo "environment.ts n'√©tait pas sauvegard√©, donc pas de restauration n√©cessaire."
          fi
          ls -l frontend/src/environments/  # V√©rification

      # 8Ô∏è‚É£ Exclure temporairement environment.ts de .gitignore et s'assurer qu'il est suivi
      - name: Force Git to track environment.ts
        run: |
          echo "!frontend/src/environments/environment.ts" >> .gitignore
          git add frontend/src/environments/environment.ts || echo "No environment.ts to add"
          git commit -m "Ensure Git tracks environment.ts after sync" || echo "No changes to commit"

      # 9Ô∏è‚É£ Configurer l'identit√© Git pour permettre le commit automatique
      - name: Configure Git Identity
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"

      # üîü Pousser les modifications vers le fork si des changements ont eu lieu
      - name: Push changes to Fork
        run: |
          git add .
          git commit -m "Sync avec le contenu de la branche nomBranch tout en pr√©servant les fichiers personnalis√©s" || echo "No changes to commit"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/mate-ogarcia/2025_Ease_fork.git main --force
